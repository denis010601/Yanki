@media screen and (min-width:1180px){.burger{position:relative;top:0;left:0;z-index:1000}.burger__menu,.burger__menu.is-active{width:720px;padding-left:120px;top:14px;height:85px}.burger__menu{z-index:0;position:relative;-webkit-transition:all .7s;-o-transition:all .7s;transition:all .7s;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.burger__menu.is-active{background:0 0}.burger__item{color:#fff;width:auto;border-block:0}.burger__item-link{font-size:18px}.burger__item:nth-child(-n+5){display:none}.burger__item:nth-child(6){display:-webkit-box;display:-ms-flexbox;display:flex}.btn-next,.btn-prev{width:40px;height:40px;font-size:30px}.btn-next::before,.btn-prev::before{top:0}.btn-next{right:20px}.btn-prev{left:20px}.card-link{height:450px}.card-link__title{height:40px}.category-swiper{height:450px}.client{position:static;margin-left:75px}.client__item{width:25px;height:25px}.client__item--lk,.client__item--search{display:block;background-image:url(../img/lk_white.svg);background-repeat:no-repeat;background-size:cover;background-position:center}.client__item--search{background-image:url(../img/search_white.svg)}.hero{height:100vh;max-height:100vh;background:-webkit-gradient(linear,left top,left bottom,from(rgba(61,61,61,.5)),to(rgba(61,61,61,0))),url(../img/bg/yanki_fon_d.webp) center center no-repeat;background:-o-linear-gradient(top,rgba(61,61,61,.5) 0,rgba(61,61,61,0) 100%),url(../img/bg/yanki_fon_d.webp) center center no-repeat;background:linear-gradient(180deg,rgba(61,61,61,.5) 0,rgba(61,61,61,0) 100%),url(../img/bg/yanki_fon_d.webp) center center no-repeat;background-size:cover}.hero__link{font-size:16px;line-height:18.78px}.hero__link::before{width:18px;height:18px}.logo{position:static;font-size:56px;margin-left:120px;display:block;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.logo.is-active,.nav-list.is-active{opacity:0;visibility:hidden}.nav{position:absolute;top:0}.nav-list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1;margin-left:105px;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.nav__item{margin-left:25px}.lang-coin .select:first-child,.nav__item:first-child{margin-left:0}.nav__item--link{font-weight:300;font-size:18px;text-decoration:none;line-height:21px;color:#fff;text-transform:uppercase}.lang-coin{position:static;-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3;margin-left:93px}.lang-coin .select{margin-left:20px}.lang-coin .coin{display:block}.select{font-size:18px;line-height:21px}.title--big{font-size:42px}.title-h3{font-size:20px;line-height:23px}.wrapper{max-width:1140px;padding:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */