@media screen and (min-width:1180px){.burger{position:relative;top:0;left:0}.burger__menu{width:0;max-width:300px;height:93vh;-webkit-transition:all .7s;-o-transition:all .7s;transition:all .7s;border-top-right-radius:20px}.burger__menu.is-active{width:25%;max-height:100%;height:100%}.burger__menu .coin{display:none}.client{position:static;margin-left:75px}.client__item{width:25px;height:25px}.client__item--lk,.client__item--search{display:block;background-image:url(../img/lk_white.svg);background-repeat:no-repeat;background-size:cover;background-position:center}.client__item--search{background-image:url(../img/search_white.svg)}.hero{height:100vh;max-height:900px;overflow:hidden;background:-webkit-gradient(linear,left top,left bottom,from(rgba(61,61,61,.5)),to(rgba(61,61,61,0))),url(../img/bg/yanki_fon_d.webp) center center no-repeat;background:-o-linear-gradient(top,rgba(61,61,61,.5) 0,rgba(61,61,61,0) 100%),url(../img/bg/yanki_fon_d.webp) center center no-repeat;background:linear-gradient(180deg,rgba(61,61,61,.5) 0,rgba(61,61,61,0) 100%),url(../img/bg/yanki_fon_d.webp) center center no-repeat;background-size:cover}.hero__link{font-size:16px;line-height:18.78px}.hero__link::before{width:18px;height:18px}.logo{font-size:56px;margin-left:120px;display:block;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.logo,.nav{position:static}.nav-list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1;margin-left:105px}.nav__item{margin-left:25px}.lang-coin .select:first-child,.nav__item:first-child{margin-left:0}.nav__item--link{font-weight:300;font-size:18px;text-decoration:none;line-height:21px;color:#fff;text-transform:uppercase}.lang-coin{position:static;-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3;margin-left:93px}.lang-coin .select{margin-left:20px}.lang-coin .coin{display:block}.select{font-size:18px;line-height:21px}.title--big{font-size:42px}.wrapper{max-width:1140px;padding:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */